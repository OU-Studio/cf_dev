<product-info
  id="MainProduct-{{ section.id }}"
  class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}"
  data-section="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-update-url="true"
  data-url="{{ product.url }}"
>
  {{ 'component-price.css' | asset_url | stylesheet_tag }}

  {%- style -%}
    .section-{{ section.id }}-padding{padding-top:{{ section.settings.padding_top | times: 0.75 | round: 0 }}px;padding-bottom:{{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px}
    @media (min-width:750px){.section-{{ section.id }}-padding{padding-top:{{ section.settings.padding_top }}px;padding-bottom:{{ section.settings.padding_bottom }}px}}
    .cf-product{max-width:var(--page-width, {{ settings.page_width | default: 1200 }}px);margin:0 auto}

    .cf-breadcrumbs a{text-decoration:none}
    .cf-grid{display:grid;gap:40px}
    @media (min-width: 990px){.cf-grid{grid-template-columns: 40% 1fr}}
    .cf-left{position:relative}
    .cf-right{display:flex;flex-direction:column;gap:4px}
    .cf-price{display:block}
    .cf-form-row{display:flex;gap:12px;align-items:center}
    .cf-qty{display:inline-flex;align-items:center;border:1px solid var(--color-border, #e5e5e5)}
    .cf-qty input{width:64px;text-align:center;border:0;padding:.5rem}
    .cf-qty button{appearance:none;border:0;background:transparent;cursor:pointer;padding:.5rem;line-height:1}
    .cf-atc{min-width:220px}
    .cf-hr{border:0;border-top:1px solid var(--color-border, #e5e5e5);margin:8px 0 4px}
    .cf-rows{display:flex;flex-direction:column;gap:30px}
    .cf-row{display:grid;grid-template-columns:60px 1fr;gap:30px;align-items:start}
    .cf-row h3{margin:0 0 4px 0;font-size:1rem}
    .cf-row p{margin:0}
    .cf-ph{width:60px;height:60px;display:flex;align-items:center;justify-content:center;}
    /* Slick basic sizing */
    .cf-slider-for .slide{aspect-ratio: 1/1; display:flex;align-items:center;justify-content:center;background:#fafafa}
    .cf-slider-for img{max-width:100%;max-height:100%;object-fit:contain}
    .cf-slider-nav .thumb{padding:2px}
    .cf-slider-nav img{width:100%;height:100%;object-fit:cover}
    .cf-slider-nav .slick-slide{opacity:.6}
    .cf-slider-nav .slick-current{opacity:1}
  {%- endstyle -%}

  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}

  <div class="page-width cf-product product">
    <!-- Breadcrumbs -->
    <nav class="cf-breadcrumbs" aria-label="Breadcrumb">
      <a href="{{ routes.root_url }}">Home</a>
      {%- if collection -%}
        &nbsp;»&nbsp;<a href="{{ collection.url }}">{{ collection.title }}</a>
      {%- endif -%}
      &nbsp;»&nbsp;<span aria-current="page">{{ product.title }}</span>
    </nav>

    <!-- 2-col layout -->
    <div class="cf-grid">
      <!-- LEFT: Slick slideshow with thumbnails -->
      <div class="cf-left">
        <div class="cf-slider-for">
          {%- for image in product.images -%}
            <div class="slide">
              {{ image | image_url: width: 1920 | image_tag: loading: 'lazy', widths: '400, 800, 1200, 1600, 1920', alt: image.alt | escape }}
            </div>
          {%- endfor -%}
          {%- if product.images.size == 0 and product.featured_media -%}
            <div class="slide">
              {{ product.featured_media | image_url: width: 1920 | image_tag: loading: 'lazy', widths: '400, 800, 1200, 1600, 1920', alt: product.title | escape }}
            </div>
          {%- endif -%}
        </div>
        <div class="cf-slider-nav" aria-label="Thumbnails">
          {%- for image in product.images -%}
            <div class="thumb">
              {{ image | image_url: width: 220 | image_tag: loading: 'lazy', alt: image.alt | escape }}
            </div>
          {%- endfor -%}
        </div>
      </div>

      <!-- RIGHT: Title, Price, Size metafield, Description, Qty + ATC, HR, Info rows -->
      <div class="cf-right">
        <h1 class="cf-title">{{ product.title | escape }}</h1>

        <div class="cf-price" id="price-{{ section.id }}" role="status">
          {%- render 'price',
            product: product,
            use_variant: true,
            show_badges: true,
            price_class: 'price--large'
          -%}
        </div>

        {%- if product.metafields.custom.product_size != blank -%}
          <div class="cf-size">
            {{ product.metafields.custom.product_size }}
          </div>
        {%- endif -%}

        {%- if product.description != blank -%}
          <div class="cf-desc rte">
            {{ product.description }}
          </div>
        {%- endif -%}

        {%- assign product_form_id = 'product-form-' | append: section.id -%}
        <div class="cf-form-row">
          {%- form 'product', product, id: product_form_id, class: 'product-form' -%}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <quantity-input class="quantity">
                        <button class="quantity__button" name="minus" type="button">
                          <span class="visually-hidden">
                            {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                          </span>
                          <span class="svg-wrapper">
                            {{- 'icon-minus.svg' | inline_asset_content -}}
                          </span>
                        </button>
                        <input
                          class="quantity__input"
                          type="number"
                          name="quantity"
                          id="Quantity-{{ section.id }}"
                          data-cart-quantity="{{ cart_qty }}"
                          data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                            data-max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                            max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                          {% endif %}
                          step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
                          value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                          form="{{ product_form_id }}"
                        >
                        <button class="quantity__button" name="plus" type="button">
                          <span class="visually-hidden">
                            {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                          </span>
                          <span class="svg-wrapper">
                            {{- 'icon-plus.svg' | inline_asset_content -}}
                          </span>
                        </button>
                      </quantity-input>
                        {% endform %}

            {%- render 'buy-buttons',
                  block: block,
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}
        </div>

        <hr class="cf-hr">

        <div class="cf-rows">
          {%- if product.metafields.custom.fragranced_with != blank -%}
            <div class="cf-row fragrance">
              <div class="cf-ph" ></div>
              <div>
                <h3>Fragranced with</h3>
                <p>{{ product.metafields.custom.fragranced_with | newline_to_br }}</p>
              </div>
            </div>
          {%- endif -%}

          {%- if product.metafields.custom.superb_for != blank -%}
            <div class="cf-row superb">
              <div class="cf-ph" ></div>
              <div>
                <h3>Superb for</h3>
                <p>{{ product.metafields.custom.superb_for | newline_to_br }}</p>
              </div>
            </div>
          {%- endif -%}

          {%- if product.metafields.custom.benefits != blank -%}
            <div class="cf-row benefits">
              <div class="cf-ph" ></div>
              <div>
                <h3>Benefits</h3>
                <p>{{ product.metafields.custom.benefits | newline_to_br }}</p>
              </div>
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>

    <!-- Structured data -->
    <script type="application/ld+json">
      {{ product | structured_data }}
    </script>
  </div>

  <!-- Load jQuery + Slick if needed, then init -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css">
  <script>
    (function(){
      function initSlick(){
        if (!window.jQuery || !jQuery.fn || !jQuery.fn.slick) return;

        var $for = jQuery('.cf-slider-for');
        var $nav = jQuery('.cf-slider-nav');

        if ($for.data('slick-initialized')) return;

        $for.on('init', function(){ $for.attr('data-slick-initialized', 'true'); });

        $for.slick({
          arrows: true,
          asNavFor: '.cf-slider-nav',
          adaptiveHeight: true,
          slidesToShow: 1,
          slidesToScroll: 1,
          infinite: false
        });

        $nav.slick({
          asNavFor: '.cf-slider-for',
          slidesToShow: Math.min(6, {{ product.images.size | default: 6 }}),
          slidesToScroll: 1,
          focusOnSelect: true,
          infinite: false,
          variableWidth: false
        });

        // Qty buttons
        document.querySelectorAll('.cf-qty').forEach(function(box){
          var input = box.querySelector('input[type="number"]');
          var minus = box.querySelector('.cf-qty-minus');
          var plus  = box.querySelector('.cf-qty-plus');
          function clamp(val){
            var min = parseInt(input.min || '1',10);
            var max = input.max ? parseInt(input.max,10) : null;
            val = Math.max(min, val);
            if (max) val = Math.min(max, val);
            return val;
          }
          minus.addEventListener('click', function(){
            var step = parseInt(input.step || '1',10);
            input.value = clamp(parseInt(input.value || '1',10) - step);
            input.dispatchEvent(new Event('change', {bubbles:true}));
          });
          plus.addEventListener('click', function(){
            var step = parseInt(input.step || '1',10);
            input.value = clamp(parseInt(input.value || '1',10) + step);
            input.dispatchEvent(new Event('change', {bubbles:true}));
          });
        });
      }

      function loadScript(src, cb){
        var s=document.createElement('script'); s.src=src; s.defer=true; s.onload=cb; document.head.appendChild(s);
      }

      function ensureSlick(){
        if (window.jQuery && jQuery.fn && jQuery.fn.slick){ initSlick(); return; }
        var afterJQ = function(){ loadScript('https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js', initSlick); };
        if (!window.jQuery){ loadScript('https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js', afterJQ); }
        else { afterJQ(); }
      }

      if (document.readyState === 'loading'){ document.addEventListener('DOMContentLoaded', ensureSlick); }
      else { ensureSlick(); }
    })();
  </script>
</product-info>

{% schema %}
{
  "name": "Main product (CF custom)",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "min": 0, "max": 100, "step": 4, "unit": "px",
      "label": "Top padding", "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0, "max": 100, "step": 4, "unit": "px",
      "label": "Bottom padding", "default": 36
    }
  ],
  "blocks": []
}
{% endschema %}
